{"ast":null,"code":"import * as React from 'react';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { ZAxisContext } from '../context/ZAxisContextProvider';\nexport function useXColorScale(identifier) {\n  const {\n    xAxis,\n    xAxisIds\n  } = React.useContext(CartesianContext);\n  const id = typeof identifier === 'string' ? identifier : xAxisIds[identifier ?? 0];\n  return xAxis[id].colorScale;\n}\nexport function useYColorScale(identifier) {\n  const {\n    yAxis,\n    yAxisIds\n  } = React.useContext(CartesianContext);\n  const id = typeof identifier === 'string' ? identifier : yAxisIds[identifier ?? 0];\n  return yAxis[id].colorScale;\n}\nexport function useZColorScale(identifier) {\n  const {\n    zAxis,\n    zAxisIds\n  } = React.useContext(ZAxisContext);\n  const id = typeof identifier === 'string' ? identifier : zAxisIds[identifier ?? 0];\n  return zAxis[id]?.colorScale;\n}","map":{"version":3,"names":["React","CartesianContext","ZAxisContext","useXColorScale","identifier","xAxis","xAxisIds","useContext","id","colorScale","useYColorScale","yAxis","yAxisIds","useZColorScale","zAxis","zAxisIds"],"sources":["C:/Users/lyont/GithubProfile/backendstesting/LET-FrontEnd/node_modules/@mui/x-charts/esm/hooks/useColorScale.js"],"sourcesContent":["import * as React from 'react';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { ZAxisContext } from '../context/ZAxisContextProvider';\nexport function useXColorScale(identifier) {\n  const {\n    xAxis,\n    xAxisIds\n  } = React.useContext(CartesianContext);\n  const id = typeof identifier === 'string' ? identifier : xAxisIds[identifier ?? 0];\n  return xAxis[id].colorScale;\n}\nexport function useYColorScale(identifier) {\n  const {\n    yAxis,\n    yAxisIds\n  } = React.useContext(CartesianContext);\n  const id = typeof identifier === 'string' ? identifier : yAxisIds[identifier ?? 0];\n  return yAxis[id].colorScale;\n}\nexport function useZColorScale(identifier) {\n  const {\n    zAxis,\n    zAxisIds\n  } = React.useContext(ZAxisContext);\n  const id = typeof identifier === 'string' ? identifier : zAxisIds[identifier ?? 0];\n  return zAxis[id]?.colorScale;\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,YAAY,QAAQ,iCAAiC;AAC9D,OAAO,SAASC,cAAcA,CAACC,UAAU,EAAE;EACzC,MAAM;IACJC,KAAK;IACLC;EACF,CAAC,GAAGN,KAAK,CAACO,UAAU,CAACN,gBAAgB,CAAC;EACtC,MAAMO,EAAE,GAAG,OAAOJ,UAAU,KAAK,QAAQ,GAAGA,UAAU,GAAGE,QAAQ,CAACF,UAAU,IAAI,CAAC,CAAC;EAClF,OAAOC,KAAK,CAACG,EAAE,CAAC,CAACC,UAAU;AAC7B;AACA,OAAO,SAASC,cAAcA,CAACN,UAAU,EAAE;EACzC,MAAM;IACJO,KAAK;IACLC;EACF,CAAC,GAAGZ,KAAK,CAACO,UAAU,CAACN,gBAAgB,CAAC;EACtC,MAAMO,EAAE,GAAG,OAAOJ,UAAU,KAAK,QAAQ,GAAGA,UAAU,GAAGQ,QAAQ,CAACR,UAAU,IAAI,CAAC,CAAC;EAClF,OAAOO,KAAK,CAACH,EAAE,CAAC,CAACC,UAAU;AAC7B;AACA,OAAO,SAASI,cAAcA,CAACT,UAAU,EAAE;EACzC,MAAM;IACJU,KAAK;IACLC;EACF,CAAC,GAAGf,KAAK,CAACO,UAAU,CAACL,YAAY,CAAC;EAClC,MAAMM,EAAE,GAAG,OAAOJ,UAAU,KAAK,QAAQ,GAAGA,UAAU,GAAGW,QAAQ,CAACX,UAAU,IAAI,CAAC,CAAC;EAClF,OAAOU,KAAK,CAACN,EAAE,CAAC,EAAEC,UAAU;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}