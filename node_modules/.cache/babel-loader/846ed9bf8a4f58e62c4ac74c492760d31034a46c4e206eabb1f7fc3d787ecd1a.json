{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { scaleBand, scalePoint } from 'd3-scale';\nimport { DEFAULT_X_AXIS_KEY, DEFAULT_Y_AXIS_KEY } from '../../constants';\nimport { isBandScaleConfig, isPointScaleConfig } from '../../models/axis';\nimport { getColorScale, getOrdinalColorScale } from '../../internals/colorScale';\nimport { getTickNumber } from '../../hooks/useTicks';\nimport { getScale } from '../../internals/getScale';\nimport { getAxisExtremum } from './getAxisExtremum';\nconst getRange = (drawingArea, axisName, isReverse) => {\n  const range = axisName === 'x' ? [drawingArea.left, drawingArea.left + drawingArea.width] : [drawingArea.top + drawingArea.height, drawingArea.top];\n  return isReverse ? range.reverse() : range;\n};\nconst DEFAULT_CATEGORY_GAP_RATIO = 0.2;\nconst DEFAULT_BAR_GAP_RATIO = 0.1;\nexport function computeValue(drawingArea, formattedSeries, inAxis, extremumGetters, axisName) {\n  const DEFAULT_AXIS_KEY = axisName === 'x' ? DEFAULT_X_AXIS_KEY : DEFAULT_Y_AXIS_KEY;\n  const allAxis = [...(inAxis?.map((axis, index) => _extends({\n    id: `defaultized-${axisName}-axis-${index}`\n  }, axis)) ?? []), ...(inAxis === undefined || inAxis.findIndex(({\n    id\n  }) => id === DEFAULT_AXIS_KEY) === -1 ? [{\n    id: DEFAULT_AXIS_KEY,\n    scaleType: 'linear'\n  }] : [])];\n  const completeAxis = {};\n  allAxis.forEach((axis, axisIndex) => {\n    const isDefaultAxis = axisIndex === 0;\n    const [minData, maxData] = getAxisExtremum(axis, extremumGetters, isDefaultAxis, formattedSeries);\n    const range = getRange(drawingArea, axisName, axis.reverse);\n    if (isBandScaleConfig(axis)) {\n      const categoryGapRatio = axis.categoryGapRatio ?? DEFAULT_CATEGORY_GAP_RATIO;\n      const barGapRatio = axis.barGapRatio ?? DEFAULT_BAR_GAP_RATIO;\n      // Reverse range because ordinal scales are presented from top to bottom on y-axis\n      const scaleRange = axisName === 'x' ? range : [range[1], range[0]];\n      completeAxis[axis.id] = _extends({\n        categoryGapRatio,\n        barGapRatio\n      }, axis, {\n        scale: scaleBand(axis.data, scaleRange).paddingInner(categoryGapRatio).paddingOuter(categoryGapRatio / 2),\n        tickNumber: axis.data.length,\n        colorScale: axis.colorMap && (axis.colorMap.type === 'ordinal' ? getOrdinalColorScale(_extends({\n          values: axis.data\n        }, axis.colorMap)) : getColorScale(axis.colorMap))\n      });\n    }\n    if (isPointScaleConfig(axis)) {\n      const scaleRange = axisName === 'x' ? range : [...range].reverse();\n      completeAxis[axis.id] = _extends({}, axis, {\n        scale: scalePoint(axis.data, scaleRange),\n        tickNumber: axis.data.length,\n        colorScale: axis.colorMap && (axis.colorMap.type === 'ordinal' ? getOrdinalColorScale(_extends({\n          values: axis.data\n        }, axis.colorMap)) : getColorScale(axis.colorMap))\n      });\n    }\n    if (axis.scaleType === 'band' || axis.scaleType === 'point') {\n      // Could be merged with the two previous \"if conditions\" but then TS does not get that `axis.scaleType` can't be `band` or `point`.\n      return;\n    }\n    const scaleType = axis.scaleType ?? 'linear';\n    const extremums = [axis.min ?? minData, axis.max ?? maxData];\n    const tickNumber = getTickNumber(_extends({}, axis, {\n      range,\n      domain: extremums\n    }));\n    const scale = getScale(scaleType, extremums, range).nice(tickNumber);\n    const [minDomain, maxDomain] = scale.domain();\n    const domain = [axis.min ?? minDomain, axis.max ?? maxDomain];\n    completeAxis[axis.id] = _extends({}, axis, {\n      scaleType: scaleType,\n      scale: scale.domain(domain),\n      tickNumber,\n      colorScale: axis.colorMap && getColorScale(axis.colorMap)\n    });\n  });\n  return {\n    axis: completeAxis,\n    axisIds: allAxis.map(({\n      id\n    }) => id)\n  };\n}","map":{"version":3,"names":["_extends","scaleBand","scalePoint","DEFAULT_X_AXIS_KEY","DEFAULT_Y_AXIS_KEY","isBandScaleConfig","isPointScaleConfig","getColorScale","getOrdinalColorScale","getTickNumber","getScale","getAxisExtremum","getRange","drawingArea","axisName","isReverse","range","left","width","top","height","reverse","DEFAULT_CATEGORY_GAP_RATIO","DEFAULT_BAR_GAP_RATIO","computeValue","formattedSeries","inAxis","extremumGetters","DEFAULT_AXIS_KEY","allAxis","map","axis","index","id","undefined","findIndex","scaleType","completeAxis","forEach","axisIndex","isDefaultAxis","minData","maxData","categoryGapRatio","barGapRatio","scaleRange","scale","data","paddingInner","paddingOuter","tickNumber","length","colorScale","colorMap","type","values","extremums","min","max","domain","nice","minDomain","maxDomain","axisIds"],"sources":["C:/Users/lyont/GithubProfile/backendstesting/LET-FrontEnd/node_modules/@mui/x-charts/esm/context/CartesianProvider/computeValue.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { scaleBand, scalePoint } from 'd3-scale';\nimport { DEFAULT_X_AXIS_KEY, DEFAULT_Y_AXIS_KEY } from '../../constants';\nimport { isBandScaleConfig, isPointScaleConfig } from '../../models/axis';\nimport { getColorScale, getOrdinalColorScale } from '../../internals/colorScale';\nimport { getTickNumber } from '../../hooks/useTicks';\nimport { getScale } from '../../internals/getScale';\nimport { getAxisExtremum } from './getAxisExtremum';\nconst getRange = (drawingArea, axisName, isReverse) => {\n  const range = axisName === 'x' ? [drawingArea.left, drawingArea.left + drawingArea.width] : [drawingArea.top + drawingArea.height, drawingArea.top];\n  return isReverse ? range.reverse() : range;\n};\nconst DEFAULT_CATEGORY_GAP_RATIO = 0.2;\nconst DEFAULT_BAR_GAP_RATIO = 0.1;\nexport function computeValue(drawingArea, formattedSeries, inAxis, extremumGetters, axisName) {\n  const DEFAULT_AXIS_KEY = axisName === 'x' ? DEFAULT_X_AXIS_KEY : DEFAULT_Y_AXIS_KEY;\n  const allAxis = [...(inAxis?.map((axis, index) => _extends({\n    id: `defaultized-${axisName}-axis-${index}`\n  }, axis)) ?? []), ...(inAxis === undefined || inAxis.findIndex(({\n    id\n  }) => id === DEFAULT_AXIS_KEY) === -1 ? [{\n    id: DEFAULT_AXIS_KEY,\n    scaleType: 'linear'\n  }] : [])];\n  const completeAxis = {};\n  allAxis.forEach((axis, axisIndex) => {\n    const isDefaultAxis = axisIndex === 0;\n    const [minData, maxData] = getAxisExtremum(axis, extremumGetters, isDefaultAxis, formattedSeries);\n    const range = getRange(drawingArea, axisName, axis.reverse);\n    if (isBandScaleConfig(axis)) {\n      const categoryGapRatio = axis.categoryGapRatio ?? DEFAULT_CATEGORY_GAP_RATIO;\n      const barGapRatio = axis.barGapRatio ?? DEFAULT_BAR_GAP_RATIO;\n      // Reverse range because ordinal scales are presented from top to bottom on y-axis\n      const scaleRange = axisName === 'x' ? range : [range[1], range[0]];\n      completeAxis[axis.id] = _extends({\n        categoryGapRatio,\n        barGapRatio\n      }, axis, {\n        scale: scaleBand(axis.data, scaleRange).paddingInner(categoryGapRatio).paddingOuter(categoryGapRatio / 2),\n        tickNumber: axis.data.length,\n        colorScale: axis.colorMap && (axis.colorMap.type === 'ordinal' ? getOrdinalColorScale(_extends({\n          values: axis.data\n        }, axis.colorMap)) : getColorScale(axis.colorMap))\n      });\n    }\n    if (isPointScaleConfig(axis)) {\n      const scaleRange = axisName === 'x' ? range : [...range].reverse();\n      completeAxis[axis.id] = _extends({}, axis, {\n        scale: scalePoint(axis.data, scaleRange),\n        tickNumber: axis.data.length,\n        colorScale: axis.colorMap && (axis.colorMap.type === 'ordinal' ? getOrdinalColorScale(_extends({\n          values: axis.data\n        }, axis.colorMap)) : getColorScale(axis.colorMap))\n      });\n    }\n    if (axis.scaleType === 'band' || axis.scaleType === 'point') {\n      // Could be merged with the two previous \"if conditions\" but then TS does not get that `axis.scaleType` can't be `band` or `point`.\n      return;\n    }\n    const scaleType = axis.scaleType ?? 'linear';\n    const extremums = [axis.min ?? minData, axis.max ?? maxData];\n    const tickNumber = getTickNumber(_extends({}, axis, {\n      range,\n      domain: extremums\n    }));\n    const scale = getScale(scaleType, extremums, range).nice(tickNumber);\n    const [minDomain, maxDomain] = scale.domain();\n    const domain = [axis.min ?? minDomain, axis.max ?? maxDomain];\n    completeAxis[axis.id] = _extends({}, axis, {\n      scaleType: scaleType,\n      scale: scale.domain(domain),\n      tickNumber,\n      colorScale: axis.colorMap && getColorScale(axis.colorMap)\n    });\n  });\n  return {\n    axis: completeAxis,\n    axisIds: allAxis.map(({\n      id\n    }) => id)\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}